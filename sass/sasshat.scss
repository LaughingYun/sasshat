@mixin prefixer($property, $value, $valPrefix: false){
	-webkit-#{$property}: if($valPrefix, -webkit-#{$value}, $value);
	-moz-#{$property}: if($valPrefix, -moz-#{$value}, $value);
	-ms-#{$property}: if($valPrefix, -ms-#{$value}, $value);
	#{$property}: $value;
}
//A
@mixin align-content($value){
	//flex-start | flex-end | center | space-between | space-around | stretch
	@include prefixer($value);
}
@mixin align-items($value){
	//flex-start | flex-end | center | baseline | stretch
	@include prefixer($value);
}
@mixin justify-content($value){
	//flex-start | flex-end | center | space-between | space-around
	@include prefixer($value);
}
///align-self
@mixin animation($value...){
	// animation-name | animation-duration | animation-timing-function | animation-delay | animation-iteration-count | animation-direction | animation-fill-mode
	@include prefixer(animation, $value);
}
@mixin animation-delay($value){
	@include prefixer(animation-delay, $value);
}
@mixin animation-direction($value){
	// normal | alternate
	@include prefixer(animation-direction, $value);
}
@mixin animation-duration($value){
	@include prefixer(animation-duration, $value);
}
@mixin animation-fill-mode($value){
	//none | forwards | backwards | both
	@include prefixer(animation-fill-mode, $value);
}
@mixin animation-iteration-count($value){
	@include prefixer(animation-iteration-count, $value);
}
@mixin animation-name($value...){
	@include prefixer(animation-name, $value);
}
@mixin animation-play-state($value){
	//paused | running;
	@include prefixer(animation-play-state, $value);
}
@mixin animation-timing-function($value){
	//linear | ease | ease-in | ease-out | ease-in-out | cubic-bezier(n,n,n,n);
	@include prefixer(animation-play-state, $value);
}
@mixin appearance($value){
	@include prefixer(appearance, $value);
}
